#  Copyright (c) 2003-2008 by nexB, Inc. http://www.nexb.com/ - All rights reserved.
#  This software is licensed under the terms of the Open Software License version 2.1.
#  A copy of the license is available at http://opensource.org/licenses/osl-2.1.php

###############################################################################
##                                                                           ##
##                 EasyEclipse optional build settings                       ##
##                                                                           ##
###############################################################################

## If needed, you can copy this file
## to <workspace>/org.nexb.easyeclipse.releng/build.properties
## or to <user.home>/easy/build.properties ,
## and uncomment/customize it to match your needs.
## All values are optional.

###########################
## Folder where built artefacts are put
###########################

# This can be useful to put your build directory outside of Eclipse's scope
# (not in the org.nexb.easyeclipse.releng folder).
# Also, on windows, the file path depth is limited by MAX_PATH (or ~260 char),
# so it's good use a very short path at the root of a drive, like in build.folder=c:\\b
# Default value: "org.nexb.easyeclipse.releng/build" folder.

#build.folder=/tmp/build
# or
#build.folder=c:\\b

###########################
# Short folder names
###########################

# Only needed on windows, where the file path depth is limited by MAX_PATH (or ~260 char),
# and NSIS (installer builder) may fail because pathes are too long.
# Default values are (respectively) "components", "assemblies", "distro-releases" and "installer"

#components.folder.name=c
#assemblies.folder.name=a
#configurations.folder.name=p
#installer.folder.name=i

###########################
# Branding settings
###########################

# Path to the locations of brandings elements. You will use it if you want
# a different branding (product name, images...) from EasyEclipse. See readme.html
# for more details.
# The path can be absolute, or relative to the org.nexb.easyeclipse.releng folder.
# Default value: "branding/easyeclipse"

branding.folder=../../../branding/glassfish

# Whether or not org.eclipse.platform will used as a branding plugin
# and patched accordingly. If set to false you can provide your own branding
# and may need to provide your own root files.
# Default value: true

#use.patched.branding=false

###########################
## Restrict build to some platforms
###########################

# Flags to restrict the build. May be useful on some platforms that don't have the needed tools.
# The meaning of each flag is self-explanatory.
# Default value is 'true' for all four flags.

#create.distro.installers=false
#create.plugin.linux.installers=false
#create.plugin.mac.installers=false
#create.plugin.win32.installers=false


###########################
## Location for optional additional releng elements
###########################

# The relative or absolute location of a folder where to take additional components,
# assemblies, sets, licenses or configurations, as well as patches, installers and branding
# Default value: not set
# when this property is set, the additional releng will be merged with the
# main repository. In case of naming conflicts (ie same components names in both repos)
# the additional repository wins
# this can be used for instance to create a private repository that contains
# additional private components, licenses, distros, patches and so on.
# the directory structure of the releng directory is expected to be the same as
# that of the main releng folder and contain this hierarchy (or part of it).
# branding/
# patches/ (with patches sub-dirs)
# repository/assemblies
# repository/components
# repository/configurations
# repository/licenses
# repository/sets
# (every folder is optional), when present the folder content will be copied
# over the main releng folder
releng.additional.dir=../../../


###########################
# Disable computing install and download size for features
###########################

# In some odd occasions, the <nexb.composefeature> ant task that computes the install and download
# size of a plugin may fail when a plugin contains a very large number of files. If that happens,
# then you can disable that entirely with compose.feature.with.size=false. The defaul is true.
# The default will calculate the size for each plugins and update the composed/created
# feature.xml accordingly with those values. When set to false, the size will be not calculated
# and the feature.xml will have size set to zero.

compose.feature.with.size=false

###########################
# Optimize extraction of archives
###########################

# Do no re-extract once the files have been downloaded and extracted.
# Good optimiziation, but misleading. Won't work with "clean" target of builddriver.xml
# Default value is 'false'

#builddriver.optimize.extracts=true

###########################
# The key to encrypt/decrypt content
###########################

# some fields in the repository are encrypted: to read them,
# put the encryption key here.
# Default value: not set

#easyeclipse.encryption.key=

###########################
## CVS properties: roots and pass
###########################
cvs.user=guest
#cvs.password=cvsaccess
# those CVS connection strings are used for some internal components
# since Sf.net public pserver CVS is now in sync with ext, those are less useful
# when SSH/ext is used, using an SSH key is preferred
# used in the build (in the nexb-anttasks component)
# Default values: not set
#cvs.root.internal-easyeclipse=:ssh;username=pombredanne;password=XXXXXXXXXXXXXX;hostname=khan.dreamhost.com:/home/easy

#
# On a unix system, with a ssh keychain mechanism
#(for example http://www-128.ibm.com/developerworks/opensource/library/l-keyc2/?dwzone=opensource),
# that would be:

#cvs.root.internal-easyeclipse=:ext:farialima@khan.dreamhost.com:/home/easy

# used in the build (in the easyexplore component) (legacy)
#cvs.root.sf-easystruts=:ssh;username=pombredanne;password=XXXXXXXXXXXXXX;hostname=cvs.sourceforge.net:/cvsroot/easystruts

# used in the build (in the cbg-editor component) (legacy)
#cvs.root.sf-easyeclipse=:ssh;username=pombredanne;password=XXXXXXXXXXXXXX;hostname=cvs.sourceforge.net:/cvsroot/easyeclipse

###########################
## Automated Release to Sf.net
###########################

# not used for now

#sf.user=pombredanne
#sf.pass=XXXXXXXXX

#sf.group.id.teretera=89929
#sf.project.name.teretera=teretera

#sf.group.id.easyeclipse=131065
#sf.project.name.easyeclipse=easyeclipse

##########################################################
############# Eclipse JAVA COMPILER OPTIONS ##############

# Make the build fail if any build from source fails,
# see https://bugs.eclipse.org/bugs/show_bug.cgi?id=108621
# By default, this value is set to true (contrary to the PDE build).
# If you want to set it to false, you can do it here.
#javacFailOnError=false

# Global/default location of the Java jars to compile against.
# Typically the rt.jar for your JDK/JRE
#bootclasspath=${java.home}/lib/rt.jar
# Specific JRE locations to compile against.
# Those settings are needed when building from sources
# These values are used to compile bundles specifying a
# Bundle-RequiredExecutionEnvironment.
# Uncomment and set values for environments that you support
#CDC-1.0/Foundation-1.0= /path/to/rt.jar;/path/toanother/jsse.jar
#CDC-1.1/Foundation-1.1=
#OSGi/Minimum-1.0=
#OSGi/Minimum-1.1=
#JRE-1.1=
#J2SE-1.2=
#J2SE-1.3=
#J2SE-1.4=
#J2SE-1.5=
#JavaSE-1.6=
#PersonalJava-1.1=
#PersonalJava-1.2=
#CDC-1.0/PersonalBasis-1.0=
#CDC-1.0/PersonalJava-1.0=
#CDC-1.1/PersonalBasis-1.1=
#CDC-1.1/PersonalJava-1.1=
#std on mac:
#J2SE-1.4=/System/Library/Frameworks/JavaVM.framework/Versions/1.4.2/Classes/classes.jar
#J2SE-1.5=/System/Library/Frameworks/JavaVM.framework/Versions/1.5.0/Classes/classes.jar
#
#on windows you can use something like that:
#J2SE-1.4=C:/j2sdk1.4.2_10/jre/lib/rt.jar;C:/j2sdk1.4.2_10/jre/lib/jsse.jar
###J2SE-1.5=C:/jdk1.5.0_11/jre/lib/rt.jar;C:/jdk1.5.0_11/jre/lib/jsse.jar
J2SE-1.5=/System/Library/Frameworks/JavaVM.framework/Versions/1.5.0/Classes/classes.jar
JavaSE-1.6=/System/Library/Frameworks/JavaVM.framework/Versions/1.6.0/Classes/classes.jar

# Default value for the version of the source code.
#This value is used when compiling plug-ins that do not set the
#Bundle-RequiredExecutionEnvironment or set javacSource in build.properties
javacSource=1.5

# Default value for the version of the byte code targeted.
#This value is used when compiling plug-ins that do not set the
#Bundle-RequiredExecutionEnvironment or set javacTarget in build.properties.
javacTarget=1.5

izpack.location=/Applications/IzPack
mac.pack200=true
win32.pack200=true
izpack.pack200=true
