<?xml version="1.0" encoding="UTF-8"?>

<!--
 DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 
 Copyright 1997-2009 Sun Microsystems, Inc. All rights reserved.
 
 The contents of this file are subject to the terms of either the GNU
 General Public License Version 2 only ("GPL") or the Common Development
 and Distribution License("CDDL") (collectively, the "License").  You
 may not use this file except in compliance with the License. You can obtain
 a copy of the License at https://glassfish.dev.java.net/public/CDDL+GPL.html
 or glassfish/bootstrap/legal/LICENSE.txt.  See the License for the specific
 language governing permissions and limitations under the License.
 
 When distributing the software, include this License Header Notice in each
 file and include the License file at glassfish/bootstrap/legal/LICENSE.txt.
 Sun designates this particular file as subject to the "Classpath" exception
 as provided by Sun in the GPL Version 2 section of the License file that
 accompanied this code.  If applicable, add the following below the License
 Header, with the fields enclosed by brackets [] replaced by your own
 identifying information: "Portions Copyrighted [year]
 [name of copyright owner]"
 
 Contributor(s):
 
 If you wish your version of this file to be governed by only the CDDL or
 only the GPL Version 2, indicate your decision by adding "[Contributor]
 elects to include this software in this distribution under the [CDDL or GPL
 Version 2] license."  If you don't indicate a single choice of license, a
 recipient has the option to distribute your version of this file under
 either the CDDL, the GPL Version 2 or to extend the choice of license to
 its licensees as provided above.  However, if you add GPL Version 2 code
 and therefore, elected the GPL Version 2 license, then the option applies
 only if the new code is made subject to such option by the copyright
 holder.
-->

<tns:ServerRuntime
    xmlns:tns="http://eclipse.org/jst/server/generic/ServerTypeDefinition"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://eclipse.org/jst/server/generic/ServerTypeDefinition ServerTypeDefinitionSchema.xsd "
    name="GlassFish v3 Java EE 6 build" version="v0.2">
    
    
    <property id="sunappserver.rootdirectory"  label="%sunappserver.rootdirectory"
    type="directory"
    context="runtime"
    default=""
    />
    
    <!-- don't really want to show a default here, but "" results in invalid path errors -->
    <property id="sunappserver.domaindir"  label="%sunappserver.domaindir"
    type="directory"
    context="server"
    default="${sunappserver.rootdirectory}/domains" />
    
    <property id="sunappserver.domainname"  label="%sunappserver.domainname"
    type="string"
    context="server"
    default="domain1" />



    <property id="sunappserver.adminname"  label="%sunappserver.adminname"
    type="string"
    context="server"
    default="admin" />
    
    <property id="sunappserver.adminpassword" label="%sunappserver.adminpassword"
    type="string"
    context="server"
    default="" />
    
    <property id="sunappserver.keepSessions" label="%sunappserver.keepSessions"
    type="boolean"
    context="server"
    default="true" />





    <module>
        <type>jst.web</type>
        <publishDir>${sunappserver.rootdirectory}/domains/${sunappserver.domainname}/autodeploy</publishDir>
        <publisherReference>org.eclipse.jst.server.generic.antpublisher</publisherReference>
    </module>

    <module>
        <type>jst.ejb</type>
        <publishDir>${sunappserver.rootdirectory}/domains/${sunappserver.domainname}/autodeploy</publishDir>
        <publisherReference>org.eclipse.jst.server.generic.antpublisher</publisherReference>
    </module>

    <module>
        <type>jst.ear</type>
        <publishDir>${sunappserver.rootdirectory}/domains/${sunappserver.domainname}/autodeploy</publishDir>
        <publisherReference>org.eclipse.jst.server.generic.antpublisher</publisherReference>
    </module>


    <project>
        <classpathReference>sunappsrv.project</classpathReference>
    </project>
	
	<start>
		<!-- This is not used at all, but if/when it is again, use of args (like -->
		<!-- domain & domain dir) should be re-examined -->
		<mainClass>com.sun.enterprise.glassfish.bootstrap.Main</mainClass>
		<workingDirectory>${sunappserver.rootdirectory}</workingDirectory>
		<programArguments></programArguments>
		<vmParameters>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=9009</vmParameters>
		<classpathReference>sunappsrv.server</classpathReference>
	</start>
	
    <stop>
        <!-- This is not used at all, but if/when it is again, use of args (like -->
        <!-- domain & domain dir) should be re-examined -->
		<mainClass>com.sun.enterprise.admin.cli.AsadminMain</mainClass>
		<workingDirectory>${sunappserver.rootdirectory}</workingDirectory>
		<programArguments>stop-domain</programArguments>
		<classpathReference>sunapprsrv.admin</classpathReference>
    </stop>
        
    <publisher id="org.eclipse.jst.server.generic.antpublisher">
        <publisherdata>
            <dataname>build.file</dataname>
            <datavalue>/serverdef/glassfishv3-ant.xml</datavalue>
        </publisherdata>
        <publisherdata>
            <dataname>target.publish.jst.web</dataname>
            <datavalue>deploy.j2ee.web</datavalue>
        </publisherdata>
        <publisherdata>
            <dataname>target.publish.jst.ejb</dataname>
            <datavalue>deploy.j2ee.ejb</datavalue>
        </publisherdata>
        <publisherdata>
            <dataname>target.publish.jst.ear</dataname>
            <datavalue>deploy.j2ee.ear</datavalue>
        </publisherdata>
        
        <publisherdata>
            <dataname>target.unpublish.jst.web</dataname>
            <datavalue>undeploy.j2ee.web</datavalue>
        </publisherdata>
        <publisherdata>
            <dataname>target.unpublish.jst.ejb</dataname>
            <datavalue>undeploy.j2ee.ejb</datavalue>
        </publisherdata>			
        <publisherdata>
            <dataname>target.unpublish.jst.ear</dataname>
            <datavalue>undeploy.j2ee.ear</datavalue>
        </publisherdata>
    </publisher>



    <!-- This classpath is only used in the start task above (which is not used) -->
    <classpath id="sunappsrv.server" >
        <archive path="${sunappserver.rootdirectory}/modules/glassfish.jar" />
    </classpath>
    <classpath id="sunapprsrv.admin">
    	<archive path="${sunappserver.rootdirectory}/modules/admin-cli.jar"/>
	</classpath>

    <!-- with the switch to an OSGI style manifest which does not help for compilation/code completion -->
    <!-- this list is constantly changing -->
    <classpath id="sunappsrv.project" >
	<fileset dir="${sunappserver.rootdirectory}">
		<include name="modules/javax.*.jar" />
		<include name="modules/web/javax.*.jar" />
		<include name="modules/ejb/javax.*.jar" />
		<include name="modules/webbeans-osgi*.jar" />
		<include name="modules/bean-validator*.jar" />
		<include name="modules/jsr311-api*.jar" />
		<include name="modules/jersey-*.jar" />
		<include name="modules/grizzly-comet*.jar" />
		<include name="modules/glassfish-api*.jar" />
		<include name="modules/endorsed/*.jar" />
	</fileset>
	<!-- leave at least one generic jar as an archive so that validation works -->
	<archive path="${sunappserver.rootdirectory}/modules/jsf-api.jar" />
	<!--  jar needed for tld files (html_basic and jsf_core) -->
	<archive path="${sunappserver.rootdirectory}/modules/jsf-impl.jar" />
	<archive path="${sunappserver.rootdirectory}/modules/jstl-impl.jar" />
	<!--  jars needed for integration with JPA tools (eclipselink) -->
	<fileset dir="${sunappserver.rootdirectory}">
		<include name="modules/org.eclipse.persistence*.jar" />
	</fileset>
	<!--  jars needed for Metro Web Services (optional) -->
	<fileset dir="${sunappserver.rootdirectory}">
		<include name="modules/jaxb*.jar" />
		<include name="modules/webservices*.jar" />
	</fileset>

	<!--  jar needed for integration with non-built in JPA (toplink) ddl generation -->
	<!--  note that toplink essentials does not ship with this version of glassfish, so -->
	<!--  it is intentially included here *after* eclipselink which is shipped with V3 -->
	<fileset dir="${sunappserver.rootdirectory}">
		<include name="lib/toplink-essentials*.jar" />
	</fileset>
    </classpath>
	
    <!-- Note: This is not currently used, but it uses the property sunappserver.serveraddress -->
    <!-- which does not come from the props above, but is set by synchronizing it with the value -->
    <!-- from the generic server framework in SunAppServer.java -->
    <jndiConnection>
        <providerUrl>jnp://${sunappserver.serveraddress}:1099</providerUrl>
        <initialContextFactory>org.jnp.interfaces.NamingContextFactory</initialContextFactory>
        <jndiProperty>
            <name></name>
            <value></value>
        </jndiProperty>
    </jndiConnection>
</tns:ServerRuntime>
