/*
* CDDL HEADER START
*
* The contents of this file are subject to the terms of the
* Common Development and Distribution License, Version 1.0 only
* (the "License").  You may not use this file except in compliance
* with the License.
*
* You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
* or http://www.opensolaris.org/os/licensing.
* See the License for the specific language governing permissions
* and limitations under the License.
*
* When distributing Covered Code, include this CDDL HEADER in each
* file and include the License file at usr/src/OPENSOLARIS.LICENSE.
* If applicable, add the following below this CDDL HEADER, with the
* fields enclosed by brackets "[]" replaced with your own identifying
* information: Portions Copyright [yyyy] [name of copyright owner]
*
* CDDL HEADER END
*/
/*
 * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.
* Use is subject to license terms.
*/
package org.opensolaris.webstack.settings.options;

import java.util.ArrayList;
import org.opensolaris.webstack.settings.execution.ProcessExecutor;
import org.opensolaris.webstack.settings.execution.ServerStatus;
import org.opensolaris.webstack.settings.execution.ServersManager;

/**
 *
 * @author  ludo
 */
public class GeneralPanel extends javax.swing.JPanel {

    /** Creates new form GeneralPanel */
    public GeneralPanel() {
        initComponents();
        ServerStatus running = ServersManager.getRunningState();
        updateServerStatus(running);
    }
    public void updateServerStatus(ServerStatus status){
        updatePanelContent();
        if (status.apacheRunning && status.mySqlRunning)
        startStopButton.setText("Stop Servers");
        else
        startStopButton.setText("Start Servers");
            
    }
    public void updatePanelContent() {
        String cmd2[] = {"/usr/bin/svcs",  "apache22", "mysql"};
        String output="";
        ArrayList<String> a = ProcessExecutor.executeCommand(cmd2);
        output="/usr/bin/svcs apache22 mysql" + "\n";
        for (int i = 0; i < a.size(); i++) {
           // System.out.println(a.get(i));
            output+=a.get(i).replaceAll("\t", "y         ") + "\n";
        }
        jTextArea1.setText(output);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        startStopButton = new javax.swing.JButton();
        viewDetailsButton = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(420, 200));
        setPreferredSize(new java.awt.Dimension(0, 0));

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setRows(5);
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/opensolaris/webstack/settings/options/Bundle"); // NOI18N
        startStopButton.setText(bundle.getString("LBL_STARTSERVERS")); // NOI18N
        startStopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startStopButtonActionPerformed(evt);
            }
        });

        viewDetailsButton.setText(bundle.getString("LBL_VIEWDETAILS")); // NOI18N
        viewDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(startStopButton, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewDetailsButton)
                        .addGap(17, 17, 17)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startStopButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewDetailsButton)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsButtonActionPerformed
        ViewDetailsAction.performAction();
    }//GEN-LAST:event_viewDetailsButtonActionPerformed

    private void startStopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startStopButtonActionPerformed
         ServerStatus running = ServersManager.getRunningState();
        if (running.apacheRunning && running.mySqlRunning) {
            ServersManager.StopServers();
        }
        else {
            ServersManager.StartServers();
        }
               
    }//GEN-LAST:event_startStopButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton startStopButton;
    private javax.swing.JButton viewDetailsButton;
    // End of variables declaration//GEN-END:variables

}
